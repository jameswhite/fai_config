#!/bin/sh
# Example boot script

PREREQ="mdadm"

# BUSYBOX=y doesn't work in initramfs.conf
[ ! -d /usr ] && mkdir /usr
[ ! -d /usr/bin/ ] && mkdir /usr/bin
[ ! -d /usr/sbin ] && mkdir /usr/sbin
[ -z /bin/busybox ] && /bin/busybox --install -s

prereqs(){
    echo "$PREREQ"
}

if [ -f /scripts/functions ]; then
  . /scripts/functions
else
  . /usr/share/initramfs-tools/scripts/functions
fi

case $1 in
    prereqs)
        prereqs
        exit 0
    ;;
esac

# Begin real processing below this line

log_begin_msg "Starting lvm-on-crypt"

if [ -b /dev/mmcblk0p1 ];then
    KEY_DEVICE="/dev/mmcblk0p1"
else
    KEY_DEVICE="/dev/sda1"
fi

if [ ! -z "${KEY_DEVICE}" ];then
  echo "using  ${KEY_DEVICE}"

  modprobe ext4
  if [ ! -d /mnt/boot/ ]; then mkdir -p /mnt/boot/ ;fi
  mount -t ext4 "${KEY_DEVICE}" /mnt/boot


  export HOSTNAME=$(cat /proc/cmdline|sed -e's/.*hostname=//' -e's/ .*//')
  hostname "${HOSTNAME}"

  if [ -f /mnt/boot/${HOSTNAME}/crypttab ]; then
    /bin/cat /mnt/boot/$(hostname)/crypttab | \
      awk '{print "cryptsetup --key-file /mnt"$3" luksOpen "$2" "$1}'| \
        while read READY_DEVICE ; do
          echo "${READY_DEVICE}"
          ${READY_DEVICE}
        done
  else
    /bin/cat /mnt/boot/crypttab | \
      awk '{print "cryptsetup --key-file /mnt"$3" luksOpen "$2" "$1}'| \
        while read READY_DEVICE ; do
          echo "${READY_DEVICE}"
          ${READY_DEVICE}
        done
  fi
fi

if [ ! -b /dev/mapper/crypt_dev_sda2 ]; then
    echo "no block device /dev/mapper/crypt_dev_sda2"
    echo "dropping to shell"
    /bin/sh
    # /bin/reboot
fi

# try our block id volumes...

for disk in $(ls /dev/sd*1| grep -v sda); do
  disk_blkid=$(blkid | grep ${disk} | sed -e 's/.*: UUID="//' -e 's/".*//';)
  MAP_NAME=crypt_${disk_blkid//-/_}
  KEY_FILE=/mnt/boot/${MAP_NAME}
  cryptsetup --key-file=${KEY_FILE}  luksOpen ${disk} ${MAP_NAME}
done

umount /mnt/boot

# start all volume groups that were just decrypted
for VG in `lvm pvscan | grep "^ *PV"|awk '{print $4}'| sort -u`;do
    lvm vgchange -a y ${VG}
done

exit 0
